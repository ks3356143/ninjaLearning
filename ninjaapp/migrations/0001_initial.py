# Generated by Django 4.1.7 on 2023-06-27 11:30

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Dict',
            fields=[
                ('id', models.BigAutoField(help_text='Id', primary_key=True, serialize=False, verbose_name='Id')),
                ('update_datetime', models.DateField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('create_datetime', models.DateField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('sort', models.IntegerField(blank=True, default=1, help_text='显示排序', null=True, verbose_name='显示排序')),
                ('name', models.CharField(blank=True, help_text='字典名称', max_length=100, null=True, verbose_name='字典名称')),
                ('code', models.CharField(blank=True, help_text='编码', max_length=100, null=True, verbose_name='编码')),
                ('status', models.BooleanField(blank=True, default=True, help_text='状态', verbose_name='状态')),
                ('remark', models.CharField(blank=True, help_text='备注', max_length=2000, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '字典表',
                'verbose_name_plural': '字典表',
                'db_table': 'system_dict',
                'ordering': ('sort',),
            },
        ),
        migrations.CreateModel(
            name='LoginLog',
            fields=[
                ('id', models.BigAutoField(help_text='Id', primary_key=True, serialize=False, verbose_name='Id')),
                ('remark', models.CharField(blank=True, help_text='描述', max_length=255, null=True, verbose_name='描述')),
                ('update_datetime', models.DateField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('create_datetime', models.DateField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('sort', models.IntegerField(blank=True, default=1, help_text='显示排序', null=True, verbose_name='显示排序')),
                ('username', models.CharField(blank=True, help_text='登录用户名', max_length=32, null=True, verbose_name='登录用户名')),
                ('ip', models.CharField(blank=True, help_text='登录ip', max_length=32, null=True, verbose_name='登录ip')),
                ('agent', models.TextField(blank=True, help_text='agent信息', null=True, verbose_name='agent信息')),
                ('browser', models.CharField(blank=True, help_text='浏览器名', max_length=200, null=True, verbose_name='浏览器名')),
                ('os', models.CharField(blank=True, help_text='操作系统', max_length=200, null=True, verbose_name='操作系统')),
                ('continent', models.CharField(blank=True, help_text='州', max_length=50, null=True, verbose_name='州')),
                ('country', models.CharField(blank=True, help_text='国家', max_length=50, null=True, verbose_name='国家')),
                ('province', models.CharField(blank=True, help_text='省份', max_length=50, null=True, verbose_name='省份')),
                ('city', models.CharField(blank=True, help_text='城市', max_length=50, null=True, verbose_name='城市')),
                ('district', models.CharField(blank=True, help_text='县区', max_length=50, null=True, verbose_name='县区')),
                ('isp', models.CharField(blank=True, help_text='运营商', max_length=50, null=True, verbose_name='运营商')),
                ('area_code', models.CharField(blank=True, help_text='区域代码', max_length=50, null=True, verbose_name='区域代码')),
                ('country_english', models.CharField(blank=True, help_text='英文全称', max_length=50, null=True, verbose_name='英文全称')),
                ('country_code', models.CharField(blank=True, help_text='简称', max_length=50, null=True, verbose_name='简称')),
                ('longitude', models.CharField(blank=True, help_text='经度', max_length=50, null=True, verbose_name='经度')),
                ('latitude', models.CharField(blank=True, help_text='纬度', max_length=50, null=True, verbose_name='纬度')),
                ('login_type', models.IntegerField(choices=[(1, '普通登录')], default=1, help_text='登录类型', verbose_name='登录类型')),
            ],
            options={
                'verbose_name': '登录日志',
                'verbose_name_plural': '登录日志',
                'db_table': 'system_login_log',
                'ordering': ('-create_datetime',),
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(help_text='Id', primary_key=True, serialize=False, verbose_name='Id')),
                ('remark', models.CharField(blank=True, help_text='描述', max_length=255, null=True, verbose_name='描述')),
                ('update_datetime', models.DateField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('create_datetime', models.DateField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('sort', models.IntegerField(blank=True, default=1, help_text='显示排序', null=True, verbose_name='显示排序')),
                ('ident', models.CharField(blank=True, help_text='项目标识', max_length=64, null=True, verbose_name='项目标识')),
                ('name', models.CharField(blank=True, help_text='项目名称', max_length=100, null=True, verbose_name='项目名称')),
                ('engin_model', models.CharField(blank=True, help_text='工程型号', max_length=64, null=True, verbose_name='工程型号')),
                ('section_system', models.CharField(blank=True, help_text='分系统', max_length=64, null=True, verbose_name='分系统')),
                ('sub_system', models.CharField(blank=True, help_text='子系统', max_length=64, null=True, verbose_name='子系统')),
                ('device', models.CharField(blank=True, help_text='设备', max_length=64, null=True, verbose_name='设备')),
                ('beginTime', models.DateField(auto_now_add=True, help_text='开始时间', null=True, verbose_name='开始时间')),
                ('endTime', models.DateField(auto_now_add=True, help_text='结束时间', null=True, verbose_name='结束时间')),
                ('duty_person', models.CharField(help_text='负责人', max_length=64, verbose_name='负责人')),
                ('member', models.JSONField(blank=True, help_text='项目成员', null=True, verbose_name='项目成员')),
                ('security_level', models.CharField(blank=True, help_text='安全等级', max_length=8, null=True, verbose_name='安全等级')),
                ('test_level', models.JSONField(blank=True, help_text='测试级别', null=True, verbose_name='测试级别')),
                ('plant_type', models.CharField(blank=True, help_text='平台类型', max_length=64, null=True, verbose_name='平台类型')),
                ('report_type', models.CharField(blank=True, help_text='报告类型', max_length=64, null=True, verbose_name='报告类型')),
                ('language', models.JSONField(blank=True, help_text='被测语言', null=True, verbose_name='被测语言')),
                ('standard', models.JSONField(blank=True, help_text='依据标准', null=True, verbose_name='依据标准')),
                ('entrust_ident', models.CharField(blank=True, help_text='委托方标识', max_length=64, null=True, verbose_name='委托方标识')),
                ('entrust_legal', models.CharField(blank=True, help_text='委托方法人', max_length=64, null=True, verbose_name='委托方法人')),
                ('entrust_contact', models.CharField(blank=True, help_text='委托方联系人', max_length=64, null=True, verbose_name='委托方联系人')),
                ('entrust_contact_phone', models.CharField(blank=True, help_text='委托方电话', max_length=64, null=True, verbose_name='委托方电话')),
                ('entrust_email', models.CharField(blank=True, help_text='委托方邮箱', max_length=64, null=True, verbose_name='委托方邮箱')),
                ('dev_ident', models.CharField(blank=True, help_text='研制方标识', max_length=64, null=True, verbose_name='研制方标识')),
                ('dev_legal', models.CharField(blank=True, help_text='研制方法人', max_length=64, null=True, verbose_name='研制方法人')),
                ('dev_contact', models.CharField(blank=True, help_text='研制方联系人', max_length=64, null=True, verbose_name='研制方联系人')),
                ('dev_contact_phone', models.CharField(blank=True, help_text='研制方电话', max_length=64, null=True, verbose_name='研制方电话')),
                ('dev_email', models.CharField(blank=True, help_text='研制方邮箱', max_length=64, null=True, verbose_name='研制方邮箱')),
                ('test_ident', models.CharField(blank=True, help_text='测评中心标识', max_length=64, null=True, verbose_name='测评中心标识')),
                ('test_legal', models.CharField(blank=True, help_text='测评中心法人', max_length=64, null=True, verbose_name='测评中心法人')),
                ('test_contact', models.CharField(blank=True, help_text='测评中心联系人', max_length=64, null=True, verbose_name='测评中心联系人')),
                ('test_contact_phone', models.CharField(blank=True, help_text='测评中心电话', max_length=64, null=True, verbose_name='测评中心电话')),
                ('test_email', models.CharField(blank=True, help_text='测评中心邮箱', max_length=64, null=True, verbose_name='测评中心邮箱')),
                ('step', models.CharField(blank=True, help_text='项目阶段', max_length=8, null=True, verbose_name='项目阶段')),
            ],
            options={
                'verbose_name': '项目信息',
                'verbose_name_plural': '项目信息',
                'ordering': ('-create_datetime',),
            },
        ),
        migrations.CreateModel(
            name='DictItem',
            fields=[
                ('id', models.BigAutoField(help_text='Id', primary_key=True, serialize=False, verbose_name='Id')),
                ('update_datetime', models.DateField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('create_datetime', models.DateField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('sort', models.IntegerField(blank=True, default=1, help_text='显示排序', null=True, verbose_name='显示排序')),
                ('title', models.CharField(blank=True, help_text='显示名称', max_length=100, null=True, verbose_name='显示名称')),
                ('key', models.CharField(blank=True, help_text='实际值', max_length=100, null=True, verbose_name='实际值')),
                ('status', models.BooleanField(blank=True, default=True, help_text='状态', verbose_name='状态')),
                ('remark', models.CharField(blank=True, help_text='备注', max_length=2000, null=True, verbose_name='备注')),
                ('dict', models.ForeignKey(db_constraint=False, help_text='字典', on_delete=django.db.models.deletion.CASCADE, related_name='dictItem', to='ninjaapp.dict')),
            ],
            options={
                'verbose_name': '字典表item表',
                'verbose_name_plural': '字典表item表',
                'db_table': 'system_dict_item',
                'ordering': ('sort',),
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.BigAutoField(help_text='Id', primary_key=True, serialize=False, verbose_name='Id')),
                ('remark', models.CharField(blank=True, help_text='描述', max_length=255, null=True, verbose_name='描述')),
                ('update_datetime', models.DateField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('create_datetime', models.DateField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('sort', models.IntegerField(blank=True, default=1, help_text='显示排序', null=True, verbose_name='显示排序')),
                ('username', models.CharField(db_index=True, help_text='用户账号', max_length=150, unique=True, verbose_name='用户账号')),
                ('name', models.CharField(help_text='姓名', max_length=40, verbose_name='姓名')),
                ('avatar', models.TextField(blank=True, help_text='头像', null=True, verbose_name='头像')),
                ('email', models.EmailField(blank=True, help_text='邮箱', max_length=255, null=True, verbose_name='邮箱')),
                ('status', models.CharField(help_text='status', max_length=15, verbose_name='启用状态')),
                ('job', models.CharField(blank=True, help_text='工作', max_length=255, null=True, verbose_name='工作')),
                ('jobName', models.CharField(blank=True, help_text='工作名称', max_length=255, null=True, verbose_name='工作名称')),
                ('organization', models.CharField(blank=True, help_text='工作组织', max_length=255, null=True, verbose_name='工作组织')),
                ('location', models.CharField(blank=True, help_text='住地', max_length=255, null=True, verbose_name='住地')),
                ('locationName', models.CharField(blank=True, help_text='住地名称', max_length=255, null=True, verbose_name='住地名称')),
                ('introduction', models.CharField(blank=True, help_text='自我介绍', max_length=255, null=True, verbose_name='自我介绍')),
                ('personalWebsite', models.CharField(blank=True, help_text='个人网站', max_length=255, null=True, verbose_name='个人网站')),
                ('phone', models.CharField(blank=True, help_text='电话', max_length=255, null=True, verbose_name='电话')),
                ('accountId', models.CharField(blank=True, help_text='电话', max_length=255, null=True, verbose_name='电话')),
                ('role', models.CharField(blank=True, help_text='角色', max_length=64, null=True, verbose_name='角色')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
